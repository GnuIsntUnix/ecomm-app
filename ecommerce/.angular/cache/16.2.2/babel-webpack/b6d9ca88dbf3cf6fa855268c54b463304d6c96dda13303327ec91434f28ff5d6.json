{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthService {\n  constructor(http) {\n    this.http = http;\n    this.users = [{\n      id: 1,\n      firstName: \"Terry\",\n      lastName: \"Medhurst\",\n      gender: \"male\",\n      email: \"atuny0@sohu.com\",\n      phone: \"+63 791 675 8914\",\n      password: \"9uQFF1Lh\",\n      birthDate: new Date()\n    }];\n  }\n  isAuthenticated() {\n    return this.authStatus;\n  }\n  setAuthenticated(status) {\n    this.authStatus = status;\n  }\n  getUsers() {\n    return this.http.get('http://localhost:4444/clients/');\n  }\n  getUserById(id) {\n    return this.http.get('http://localhost:4444/clients/' + id);\n  }\n  addUser(user) {\n    fetch('http://localhost:4444/clients/add', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: user\n    }).then(response => response.json()).then(data => console.log(data)).catch(error => {\n      console.error('Error:', error);\n    });\n  }\n  findUser(email, password) {\n    return this.users.find(user => user.email === email && user.password === password);\n  }\n}\n_class = AuthService;\n_class.ɵfac = function AuthService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["AuthService","constructor","http","users","id","firstName","lastName","gender","email","phone","password","birthDate","Date","isAuthenticated","authStatus","setAuthenticated","status","getUsers","get","getUserById","addUser","user","fetch","method","headers","body","then","response","json","data","console","log","catch","error","findUser","find","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["D:\\Studies\\Projects\\Angular\\ecommerce\\src\\app\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {User, UsersResponse} from \"./models/user\";\nimport {ProductsResponse} from \"./models/product-item\";\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\nimport {Observable} from \"rxjs\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  authStatus: boolean | undefined;\n\n  users: User[] = [{\n    id: 1,\n    firstName: \"Terry\",\n    lastName: \"Medhurst\",\n    gender: \"male\",\n    email: \"atuny0@sohu.com\",\n    phone: \"+63 791 675 8914\",\n    password: \"9uQFF1Lh\",\n    birthDate: new Date()\n  }];\n\n  httpOptions:any;\n\n  constructor(private http:HttpClient) { }\n\n\n  public isAuthenticated(): boolean {\n    return <boolean>this.authStatus;\n  }\n\n  public setAuthenticated(status: boolean): void {\n    this.authStatus = status;\n  }\n  getUsers() {\n    return this.http.get<UsersResponse>('http://localhost:4444/clients/');\n  }\n\n  getUserById(id: number) {\n    return this.http.get<UsersResponse>('http://localhost:4444/clients/'+id);\n  }\n\n  addUser(user: string): any {\n    fetch('http://localhost:4444/clients/add', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: user\n    })\n      .then(response => response.json())\n      .then(data => console.log(data))\n      .catch((error) => {\n        console.error('Error:', error);\n      });\n  }\n\n  findUser(email: string, password: string): User | undefined {\n    return this.users.find(user => user.email === email && user.password === password);\n  }\n}\n"],"mappings":";;;AASA,OAAM,MAAOA,WAAW;EAiBtBC,YAAoBC,IAAe;IAAf,KAAAA,IAAI,GAAJA,IAAI;IAbxB,KAAAC,KAAK,GAAW,CAAC;MACfC,EAAE,EAAE,CAAC;MACLC,SAAS,EAAE,OAAO;MAClBC,QAAQ,EAAE,UAAU;MACpBC,MAAM,EAAE,MAAM;MACdC,KAAK,EAAE,iBAAiB;MACxBC,KAAK,EAAE,kBAAkB;MACzBC,QAAQ,EAAE,UAAU;MACpBC,SAAS,EAAE,IAAIC,IAAI;KACpB,CAAC;EAIqC;EAGhCC,eAAeA,CAAA;IACpB,OAAgB,IAAI,CAACC,UAAU;EACjC;EAEOC,gBAAgBA,CAACC,MAAe;IACrC,IAAI,CAACF,UAAU,GAAGE,MAAM;EAC1B;EACAC,QAAQA,CAAA;IACN,OAAO,IAAI,CAACf,IAAI,CAACgB,GAAG,CAAgB,gCAAgC,CAAC;EACvE;EAEAC,WAAWA,CAACf,EAAU;IACpB,OAAO,IAAI,CAACF,IAAI,CAACgB,GAAG,CAAgB,gCAAgC,GAACd,EAAE,CAAC;EAC1E;EAEAgB,OAAOA,CAACC,IAAY;IAClBC,KAAK,CAAC,mCAAmC,EAAE;MACzCC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;OACjB;MACDC,IAAI,EAAEJ;KACP,CAAC,CACCK,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC,CAAC,CAC/BG,KAAK,CAAEC,KAAK,IAAI;MACfH,OAAO,CAACG,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAChC,CAAC,CAAC;EACN;EAEAC,QAAQA,CAAC1B,KAAa,EAAEE,QAAgB;IACtC,OAAO,IAAI,CAACP,KAAK,CAACgC,IAAI,CAACd,IAAI,IAAIA,IAAI,CAACb,KAAK,KAAKA,KAAK,IAAIa,IAAI,CAACX,QAAQ,KAAKA,QAAQ,CAAC;EACpF;;SApDWV,WAAW;;mBAAXA,MAAW,EAAAoC,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;SAAXvC,MAAW;EAAAwC,OAAA,EAAXxC,MAAW,CAAAyC,IAAA;EAAAC,UAAA,EAFV;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}