{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./auth.service\";\nimport * as i2 from \"@angular/router\";\nexport class AuthguardService {\n  constructor(auth, router) {\n    this.auth = auth;\n    this.router = router;\n  }\n  canActivate() {\n    if (localStorage.getItem('authStatus') === 'true') {\n      return true;\n    }\n    this.router.navigate(['/userLogin']);\n    return false;\n  }\n}\n_class = AuthguardService;\n_class.ɵfac = function AuthguardService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.AuthService), i0.ɵɵinject(i2.Router));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["AuthguardService","constructor","auth","router","canActivate","localStorage","getItem","navigate","i0","ɵɵinject","i1","AuthService","i2","Router","factory","ɵfac","providedIn"],"sources":["D:\\Studies\\Projects\\Angular\\ecommerce\\src\\app\\authguard.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {AuthService} from \"./auth.service\";\nimport {CanActivate, Router} from \"@angular/router\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthguardService implements CanActivate{\n  constructor(public auth: AuthService, public router: Router) {}\n\n  canActivate(): boolean {\n    if (localStorage.getItem('authStatus') === 'true') {\n      return true;\n    }\n    this.router.navigate(['/userLogin']);\n    return false;\n  }\n}\n"],"mappings":";;;;AAOA,OAAM,MAAOA,gBAAgB;EAC3BC,YAAmBC,IAAiB,EAASC,MAAc;IAAxC,KAAAD,IAAI,GAAJA,IAAI;IAAsB,KAAAC,MAAM,GAANA,MAAM;EAAW;EAE9DC,WAAWA,CAAA;IACT,IAAIC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,KAAK,MAAM,EAAE;MACjD,OAAO,IAAI;;IAEb,IAAI,CAACH,MAAM,CAACI,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC;IACpC,OAAO,KAAK;EACd;;SATWP,gBAAgB;;mBAAhBA,MAAgB,EAAAQ,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,MAAA;AAAA;;SAAhBb,MAAgB;EAAAc,OAAA,EAAhBd,MAAgB,CAAAe,IAAA;EAAAC,UAAA,EAFf;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}