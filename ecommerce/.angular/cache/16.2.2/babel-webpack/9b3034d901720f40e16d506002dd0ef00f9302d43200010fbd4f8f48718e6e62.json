{"ast":null,"code":"var _class;\nimport { BehaviorSubject, from } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthService {\n  constructor(http) {\n    this.http = http;\n    this.authStatus = new BehaviorSubject(this.isAuthenticated());\n  }\n  isAuthenticated() {\n    return localStorage.getItem('authStatus') === 'true';\n  }\n  getAuthStatus$() {\n    return this.authStatus.asObservable();\n  }\n  setAuthenticated(status) {\n    localStorage.setItem('authStatus', String(status));\n    localStorage.setItem(\"authToken\", \"\");\n    this.authStatus.next(status);\n  }\n  authUser() {\n    return from(fetch(\"http://localhost:4444/auth/authenticated\", {\n      method: 'GET',\n      headers: {\n        'Authorization': 'Bearer ' + this.getToken(),\n        'Content-Type': 'application/json'\n      }\n    }));\n  }\n  addUser(user) {\n    return from(fetch(\"http://localhost:4444/auth/register\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: user\n    }));\n  }\n  authenticate(username, password) {\n    let fd = new FormData();\n    fd.append(\"username\", username);\n    fd.append(\"password\", password);\n    let plainObject = {};\n    fd.forEach((value, key) => plainObject[key] = value);\n    let jsonString = JSON.stringify(plainObject);\n    return from(fetch(\"http://localhost:4444/auth/authenticate\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: jsonString\n    }));\n  }\n  setToken(token) {\n    localStorage.setItem(\"authToken\", token);\n  }\n  getToken() {\n    return localStorage.getItem(\"authToken\");\n  }\n  setAuthUser(user) {\n    localStorage.setItem(\"authUser\", String(user));\n  }\n  getAuthUser() {\n    return localStorage.getItem(\"authUser\");\n  }\n}\n_class = AuthService;\n_class.ɵfac = function AuthService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["BehaviorSubject","from","AuthService","constructor","http","authStatus","isAuthenticated","localStorage","getItem","getAuthStatus$","asObservable","setAuthenticated","status","setItem","String","next","authUser","fetch","method","headers","getToken","addUser","user","body","authenticate","username","password","fd","FormData","append","plainObject","forEach","value","key","jsonString","JSON","stringify","setToken","token","setAuthUser","getAuthUser","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["D:\\Studies\\Projects\\Angular\\ecommerce\\src\\app\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {User, UsersResponse} from \"./models/user\";\nimport {ProductItem, ProductsResponse} from \"./models/product-item\";\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\nimport {BehaviorSubject, from, Observable} from \"rxjs\";\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  private authStatus = new BehaviorSubject<boolean>(this.isAuthenticated());\n\n  httpOptions:any;\n\n  authenticatedUser: any;\n\n\n  constructor(private http:HttpClient) { }\n\n\n  public isAuthenticated(): boolean {\n    return localStorage.getItem('authStatus') === 'true';\n  }\n\n  getAuthStatus$() {\n    return this.authStatus.asObservable();\n  }\n\n  public setAuthenticated(status: boolean): void {\n    localStorage.setItem('authStatus', String(status));\n    localStorage.setItem(\"authToken\", \"\");\n    this.authStatus.next(status);\n  }\n\n  authUser(): any {\n    return from(fetch(\"http://localhost:4444/auth/authenticated\", {\n      method: 'GET',\n      headers: {\n        'Authorization': 'Bearer '+ this.getToken(),\n        'Content-Type': 'application/json',\n      },\n    }));\n  }\n\n\n  addUser(user: any): any {\n    return from(fetch(\"http://localhost:4444/auth/register\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: user\n    }));\n  }\n\n  authenticate(username: string, password: string): any {\n    let fd = new FormData();\n    fd.append(\"username\", username);\n    fd.append(\"password\", password);\n\n    let plainObject:any = {};\n    fd.forEach((value: any, key: any) => plainObject[key] = value);\n\n    let jsonString :any = JSON.stringify(plainObject);\n\n    return from(fetch(\"http://localhost:4444/auth/authenticate\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: jsonString\n    }));\n  }\n\n  setToken(token: string){\n    localStorage.setItem(\"authToken\", token);\n  }\n  getToken(){\n    return localStorage.getItem(\"authToken\");\n  }\n\n  setAuthUser(user: number) {\n    localStorage.setItem(\"authUser\", String(user));\n  }\n\n  getAuthUser():any{\n    return localStorage.getItem(\"authUser\");\n  }\n}\n"],"mappings":";AAIA,SAAQA,eAAe,EAAEC,IAAI,QAAmB,MAAM;;;AAMtD,OAAM,MAAOC,WAAW;EAStBC,YAAoBC,IAAe;IAAf,KAAAA,IAAI,GAAJA,IAAI;IAPhB,KAAAC,UAAU,GAAG,IAAIL,eAAe,CAAU,IAAI,CAACM,eAAe,EAAE,CAAC;EAOlC;EAGhCA,eAAeA,CAAA;IACpB,OAAOC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,KAAK,MAAM;EACtD;EAEAC,cAAcA,CAAA;IACZ,OAAO,IAAI,CAACJ,UAAU,CAACK,YAAY,EAAE;EACvC;EAEOC,gBAAgBA,CAACC,MAAe;IACrCL,YAAY,CAACM,OAAO,CAAC,YAAY,EAAEC,MAAM,CAACF,MAAM,CAAC,CAAC;IAClDL,YAAY,CAACM,OAAO,CAAC,WAAW,EAAE,EAAE,CAAC;IACrC,IAAI,CAACR,UAAU,CAACU,IAAI,CAACH,MAAM,CAAC;EAC9B;EAEAI,QAAQA,CAAA;IACN,OAAOf,IAAI,CAACgB,KAAK,CAAC,0CAA0C,EAAE;MAC5DC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACP,eAAe,EAAE,SAAS,GAAE,IAAI,CAACC,QAAQ,EAAE;QAC3C,cAAc,EAAE;;KAEnB,CAAC,CAAC;EACL;EAGAC,OAAOA,CAACC,IAAS;IACf,OAAOrB,IAAI,CAACgB,KAAK,CAAC,qCAAqC,EAAE;MACvDC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;OACjB;MACDI,IAAI,EAAED;KACP,CAAC,CAAC;EACL;EAEAE,YAAYA,CAACC,QAAgB,EAAEC,QAAgB;IAC7C,IAAIC,EAAE,GAAG,IAAIC,QAAQ,EAAE;IACvBD,EAAE,CAACE,MAAM,CAAC,UAAU,EAAEJ,QAAQ,CAAC;IAC/BE,EAAE,CAACE,MAAM,CAAC,UAAU,EAAEH,QAAQ,CAAC;IAE/B,IAAII,WAAW,GAAO,EAAE;IACxBH,EAAE,CAACI,OAAO,CAAC,CAACC,KAAU,EAAEC,GAAQ,KAAKH,WAAW,CAACG,GAAG,CAAC,GAAGD,KAAK,CAAC;IAE9D,IAAIE,UAAU,GAAQC,IAAI,CAACC,SAAS,CAACN,WAAW,CAAC;IAEjD,OAAO7B,IAAI,CAACgB,KAAK,CAAC,yCAAyC,EAAE;MAC3DC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;OACjB;MACDI,IAAI,EAAEW;KACP,CAAC,CAAC;EACL;EAEAG,QAAQA,CAACC,KAAa;IACpB/B,YAAY,CAACM,OAAO,CAAC,WAAW,EAAEyB,KAAK,CAAC;EAC1C;EACAlB,QAAQA,CAAA;IACN,OAAOb,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;EAC1C;EAEA+B,WAAWA,CAACjB,IAAY;IACtBf,YAAY,CAACM,OAAO,CAAC,UAAU,EAAEC,MAAM,CAACQ,IAAI,CAAC,CAAC;EAChD;EAEAkB,WAAWA,CAAA;IACT,OAAOjC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;EACzC;;SA/EWN,WAAW;;mBAAXA,MAAW,EAAAuC,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;SAAX1C,MAAW;EAAA2C,OAAA,EAAX3C,MAAW,CAAA4C,IAAA;EAAAC,UAAA,EAFV;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}