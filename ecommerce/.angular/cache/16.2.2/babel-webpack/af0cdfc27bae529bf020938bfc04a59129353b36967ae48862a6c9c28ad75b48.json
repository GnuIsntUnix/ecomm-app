{"ast":null,"code":"var _class;\nimport { CartItem } from \"./models/cart-item\";\nimport { from } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./auth.service\";\nexport class CartService {\n  constructor(authService) {\n    this.authService = authService;\n    this.storageKey = 'cartItems';\n    this.items = [];\n    if (!sessionStorage.getItem(this.storageKey)) {\n      sessionStorage.setItem(this.storageKey, JSON.stringify([]));\n    }\n  }\n  addToCart(product, qte) {\n    if (product) {\n      let cartItem = this.items.find(item => item.product.id === product.id);\n      if (cartItem) {\n        cartItem.qte += qte;\n      } else {\n        this.items.push(new CartItem(product, qte));\n      }\n    }\n    sessionStorage.setItem('cartItems', JSON.stringify(this.items));\n  }\n  getItems() {\n    let items = sessionStorage.getItem('cartItems');\n    return items ? JSON.parse(items) : [];\n  }\n  clearCart() {\n    this.items = [];\n    sessionStorage.removeItem('cartItems');\n  }\n  getCount() {\n    let items = this.getItems();\n    return items.length;\n  }\n  validateCart(commande) {\n    let fd = new FormData();\n    fd.append(\"detailsCommandes\", JSON.stringify(commande.details));\n    fd.append(\"client\", JSON.stringify(commande.user));\n    fd.append(\"dateCommande\", commande.date);\n    let plainObject = {};\n    fd.forEach((value, key) => plainObject[key] = value);\n    let jsonString = JSON.stringify(plainObject);\n    console.log(jsonString);\n    return from(fetch(\"http://localhost:4444/commande/add\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + this.authService.getToken()\n      },\n      body: jsonString\n    }));\n  }\n}\n_class = CartService;\n_class.ɵfac = function CartService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.AuthService));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["CartItem","from","CartService","constructor","authService","storageKey","items","sessionStorage","getItem","setItem","JSON","stringify","addToCart","product","qte","cartItem","find","item","id","push","getItems","parse","clearCart","removeItem","getCount","length","validateCart","commande","fd","FormData","append","details","user","date","plainObject","forEach","value","key","jsonString","console","log","fetch","method","headers","getToken","body","i0","ɵɵinject","i1","AuthService","factory","ɵfac","providedIn"],"sources":["D:\\Studies\\Projects\\Angular\\ecommerce\\src\\app\\cart.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {ProductItem} from \"./models/product-item\";\nimport {CartItem} from \"./models/cart-item\";\nimport {from} from \"rxjs\";\nimport {Command} from \"./models/command\";\nimport {AuthService} from \"./auth.service\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CartService {\n\n  private storageKey : string = 'cartItems';\n\n  items : CartItem[] = [];\n  constructor(private authService: AuthService) {\n    if (!sessionStorage.getItem(this.storageKey)) {\n      sessionStorage.setItem(this.storageKey, JSON.stringify([]));\n    }\n  }\n  addToCart(product: ProductItem | null | undefined, qte:number) {\n    if (product) {\n      let cartItem = this.items.find(item => item.product.id === product.id);\n      if (cartItem) {\n        cartItem.qte += qte;\n      } else {\n        this.items.push(new CartItem(product, qte));\n      }\n    }\n    sessionStorage.setItem('cartItems', JSON.stringify(this.items));\n  }\n\n  getItems() {\n    let items = sessionStorage.getItem('cartItems');\n    return items ? JSON.parse(items) : [];\n  }\n\n  clearCart() {\n    this.items = [];\n    sessionStorage.removeItem('cartItems');\n  }\n\n  getCount() {\n    let items = this.getItems();\n    return items.length;\n  }\n\n  validateCart(commande: Command){\n\n    let fd: FormData = new FormData();\n\n    fd.append(\"detailsCommandes\", JSON.stringify(commande.details));\n    fd.append(\"client\", JSON.stringify(commande.user));\n    fd.append(\"dateCommande\", commande.date);\n\n    let plainObject:any = {};\n    fd.forEach((value: any, key: any) => plainObject[key] = value);\n\n    let jsonString :any = JSON.stringify(plainObject);\n\n    console.log(jsonString)\n\n    return from(fetch(\"http://localhost:4444/commande/add\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization' : 'Bearer '+this.authService.getToken()\n      },\n      body:jsonString\n    }));\n  }\n}\n"],"mappings":";AAEA,SAAQA,QAAQ,QAAO,oBAAoB;AAC3C,SAAQC,IAAI,QAAO,MAAM;;;AAOzB,OAAM,MAAOC,WAAW;EAKtBC,YAAoBC,WAAwB;IAAxB,KAAAA,WAAW,GAAXA,WAAW;IAHvB,KAAAC,UAAU,GAAY,WAAW;IAEzC,KAAAC,KAAK,GAAgB,EAAE;IAErB,IAAI,CAACC,cAAc,CAACC,OAAO,CAAC,IAAI,CAACH,UAAU,CAAC,EAAE;MAC5CE,cAAc,CAACE,OAAO,CAAC,IAAI,CAACJ,UAAU,EAAEK,IAAI,CAACC,SAAS,CAAC,EAAE,CAAC,CAAC;;EAE/D;EACAC,SAASA,CAACC,OAAuC,EAAEC,GAAU;IAC3D,IAAID,OAAO,EAAE;MACX,IAAIE,QAAQ,GAAG,IAAI,CAACT,KAAK,CAACU,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACJ,OAAO,CAACK,EAAE,KAAKL,OAAO,CAACK,EAAE,CAAC;MACtE,IAAIH,QAAQ,EAAE;QACZA,QAAQ,CAACD,GAAG,IAAIA,GAAG;OACpB,MAAM;QACL,IAAI,CAACR,KAAK,CAACa,IAAI,CAAC,IAAInB,QAAQ,CAACa,OAAO,EAAEC,GAAG,CAAC,CAAC;;;IAG/CP,cAAc,CAACE,OAAO,CAAC,WAAW,EAAEC,IAAI,CAACC,SAAS,CAAC,IAAI,CAACL,KAAK,CAAC,CAAC;EACjE;EAEAc,QAAQA,CAAA;IACN,IAAId,KAAK,GAAGC,cAAc,CAACC,OAAO,CAAC,WAAW,CAAC;IAC/C,OAAOF,KAAK,GAAGI,IAAI,CAACW,KAAK,CAACf,KAAK,CAAC,GAAG,EAAE;EACvC;EAEAgB,SAASA,CAAA;IACP,IAAI,CAAChB,KAAK,GAAG,EAAE;IACfC,cAAc,CAACgB,UAAU,CAAC,WAAW,CAAC;EACxC;EAEAC,QAAQA,CAAA;IACN,IAAIlB,KAAK,GAAG,IAAI,CAACc,QAAQ,EAAE;IAC3B,OAAOd,KAAK,CAACmB,MAAM;EACrB;EAEAC,YAAYA,CAACC,QAAiB;IAE5B,IAAIC,EAAE,GAAa,IAAIC,QAAQ,EAAE;IAEjCD,EAAE,CAACE,MAAM,CAAC,kBAAkB,EAAEpB,IAAI,CAACC,SAAS,CAACgB,QAAQ,CAACI,OAAO,CAAC,CAAC;IAC/DH,EAAE,CAACE,MAAM,CAAC,QAAQ,EAAEpB,IAAI,CAACC,SAAS,CAACgB,QAAQ,CAACK,IAAI,CAAC,CAAC;IAClDJ,EAAE,CAACE,MAAM,CAAC,cAAc,EAAEH,QAAQ,CAACM,IAAI,CAAC;IAExC,IAAIC,WAAW,GAAO,EAAE;IACxBN,EAAE,CAACO,OAAO,CAAC,CAACC,KAAU,EAAEC,GAAQ,KAAKH,WAAW,CAACG,GAAG,CAAC,GAAGD,KAAK,CAAC;IAE9D,IAAIE,UAAU,GAAQ5B,IAAI,CAACC,SAAS,CAACuB,WAAW,CAAC;IAEjDK,OAAO,CAACC,GAAG,CAACF,UAAU,CAAC;IAEvB,OAAOrC,IAAI,CAACwC,KAAK,CAAC,oCAAoC,EAAE;MACtDC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClC,eAAe,EAAG,SAAS,GAAC,IAAI,CAACvC,WAAW,CAACwC,QAAQ;OACtD;MACDC,IAAI,EAACP;KACN,CAAC,CAAC;EACL;;SA5DWpC,WAAW;;mBAAXA,MAAW,EAAA4C,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,WAAA;AAAA;;SAAX/C,MAAW;EAAAgD,OAAA,EAAXhD,MAAW,CAAAiD,IAAA;EAAAC,UAAA,EAFV;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}