{"ast":null,"code":"var _class;\nimport { BehaviorSubject, from } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthService {\n  constructor(http) {\n    this.http = http;\n    this.authStatus = new BehaviorSubject(this.isAuthenticated());\n  }\n  isAuthenticated() {\n    return localStorage.getItem('authStatus') === 'true';\n  }\n  getAuthStatus$() {\n    return this.authStatus.asObservable();\n  }\n  setAuthenticated(status) {\n    localStorage.setItem('authStatus', String(status));\n    localStorage.setItem(\"authToken\", \"\");\n    this.authStatus.next(status);\n  }\n  getAuthUser() {\n    let id;\n    fetch(\"http://localhost:4444/auth/authenticated\", {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()).then(data => {\n      id = data;\n      console.log(id);\n    }).catch(error => {\n      console.error('Error:', error);\n    });\n    console.log(id);\n    return id;\n  }\n  addUser(user) {\n    return from(fetch(\"http://localhost:4444/auth/register\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: user\n    }));\n  }\n  authenticate(username, password) {\n    let fd = new FormData();\n    fd.append(\"username\", username);\n    fd.append(\"password\", password);\n    let plainObject = {};\n    fd.forEach((value, key) => plainObject[key] = value);\n    let jsonString = JSON.stringify(plainObject);\n    return from(fetch(\"http://localhost:4444/auth/authenticate\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: jsonString\n    }));\n  }\n  setToken(token) {\n    localStorage.setItem(\"authToken\", token);\n  }\n  getToken() {\n    return localStorage.getItem(\"authToken\");\n  }\n}\n_class = AuthService;\n_class.ɵfac = function AuthService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["BehaviorSubject","from","AuthService","constructor","http","authStatus","isAuthenticated","localStorage","getItem","getAuthStatus$","asObservable","setAuthenticated","status","setItem","String","next","getAuthUser","id","fetch","method","headers","then","response","json","data","console","log","catch","error","addUser","user","body","authenticate","username","password","fd","FormData","append","plainObject","forEach","value","key","jsonString","JSON","stringify","setToken","token","getToken","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["D:\\Studies\\Projects\\Angular\\ecommerce\\src\\app\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {User, UsersResponse} from \"./models/user\";\nimport {ProductItem, ProductsResponse} from \"./models/product-item\";\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\nimport {BehaviorSubject, from, Observable} from \"rxjs\";\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  private authStatus = new BehaviorSubject<boolean>(this.isAuthenticated());\n\n  httpOptions:any;\n\n\n  constructor(private http:HttpClient) { }\n\n\n  public isAuthenticated(): boolean {\n    return localStorage.getItem('authStatus') === 'true';\n  }\n\n  getAuthStatus$() {\n    return this.authStatus.asObservable();\n  }\n\n  public setAuthenticated(status: boolean): void {\n    localStorage.setItem('authStatus', String(status));\n    localStorage.setItem(\"authToken\", \"\");\n    this.authStatus.next(status);\n  }\n\n  getAuthUser(): any {\n    let id;\n    fetch(\"http://localhost:4444/auth/authenticated\", {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    })\n      .then(response => response.json())\n      .then(data => {\n        id = data;\n        console.log(id);\n      })\n      .catch(error => {\n        console.error('Error:', error);\n      });\n    console.log(id)\n    return id;\n  }\n\n\n  addUser(user: any): any {\n    return from(fetch(\"http://localhost:4444/auth/register\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: user\n    }));\n  }\n\n  authenticate(username: string, password: string): any {\n    let fd = new FormData();\n    fd.append(\"username\", username);\n    fd.append(\"password\", password);\n\n    let plainObject:any = {};\n    fd.forEach((value: any, key: any) => plainObject[key] = value);\n\n    let jsonString :any = JSON.stringify(plainObject);\n\n    return from(fetch(\"http://localhost:4444/auth/authenticate\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: jsonString\n    }));\n  }\n\n  setToken(token: string){\n    localStorage.setItem(\"authToken\", token);\n  }\n  getToken(){\n    return localStorage.getItem(\"authToken\");\n  }\n\n}\n"],"mappings":";AAIA,SAAQA,eAAe,EAAEC,IAAI,QAAmB,MAAM;;;AAMtD,OAAM,MAAOC,WAAW;EAOtBC,YAAoBC,IAAe;IAAf,KAAAA,IAAI,GAAJA,IAAI;IALhB,KAAAC,UAAU,GAAG,IAAIL,eAAe,CAAU,IAAI,CAACM,eAAe,EAAE,CAAC;EAKlC;EAGhCA,eAAeA,CAAA;IACpB,OAAOC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,KAAK,MAAM;EACtD;EAEAC,cAAcA,CAAA;IACZ,OAAO,IAAI,CAACJ,UAAU,CAACK,YAAY,EAAE;EACvC;EAEOC,gBAAgBA,CAACC,MAAe;IACrCL,YAAY,CAACM,OAAO,CAAC,YAAY,EAAEC,MAAM,CAACF,MAAM,CAAC,CAAC;IAClDL,YAAY,CAACM,OAAO,CAAC,WAAW,EAAE,EAAE,CAAC;IACrC,IAAI,CAACR,UAAU,CAACU,IAAI,CAACH,MAAM,CAAC;EAC9B;EAEAI,WAAWA,CAAA;IACT,IAAIC,EAAE;IACNC,KAAK,CAAC,0CAA0C,EAAE;MAChDC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACP,cAAc,EAAE;;KAEnB,CAAC,CACCC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAG;MACXP,EAAE,GAAGO,IAAI;MACTC,OAAO,CAACC,GAAG,CAACT,EAAE,CAAC;IACjB,CAAC,CAAC,CACDU,KAAK,CAACC,KAAK,IAAG;MACbH,OAAO,CAACG,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAChC,CAAC,CAAC;IACJH,OAAO,CAACC,GAAG,CAACT,EAAE,CAAC;IACf,OAAOA,EAAE;EACX;EAGAY,OAAOA,CAACC,IAAS;IACf,OAAO7B,IAAI,CAACiB,KAAK,CAAC,qCAAqC,EAAE;MACvDC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;OACjB;MACDW,IAAI,EAAED;KACP,CAAC,CAAC;EACL;EAEAE,YAAYA,CAACC,QAAgB,EAAEC,QAAgB;IAC7C,IAAIC,EAAE,GAAG,IAAIC,QAAQ,EAAE;IACvBD,EAAE,CAACE,MAAM,CAAC,UAAU,EAAEJ,QAAQ,CAAC;IAC/BE,EAAE,CAACE,MAAM,CAAC,UAAU,EAAEH,QAAQ,CAAC;IAE/B,IAAII,WAAW,GAAO,EAAE;IACxBH,EAAE,CAACI,OAAO,CAAC,CAACC,KAAU,EAAEC,GAAQ,KAAKH,WAAW,CAACG,GAAG,CAAC,GAAGD,KAAK,CAAC;IAE9D,IAAIE,UAAU,GAAQC,IAAI,CAACC,SAAS,CAACN,WAAW,CAAC;IAEjD,OAAOrC,IAAI,CAACiB,KAAK,CAAC,yCAAyC,EAAE;MAC3DC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;OACjB;MACDW,IAAI,EAAEW;KACP,CAAC,CAAC;EACL;EAEAG,QAAQA,CAACC,KAAa;IACpBvC,YAAY,CAACM,OAAO,CAAC,WAAW,EAAEiC,KAAK,CAAC;EAC1C;EACAC,QAAQA,CAAA;IACN,OAAOxC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;EAC1C;;SA/EWN,WAAW;;mBAAXA,MAAW,EAAA8C,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;SAAXjD,MAAW;EAAAkD,OAAA,EAAXlD,MAAW,CAAAmD,IAAA;EAAAC,UAAA,EAFV;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}