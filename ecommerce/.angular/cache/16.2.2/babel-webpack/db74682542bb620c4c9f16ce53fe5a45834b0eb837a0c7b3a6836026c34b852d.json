{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthService {\n  constructor(http) {\n    this.http = http;\n    this.users = [{\n      id: 1,\n      firstName: \"Terry\",\n      lastName: \"Medhurst\",\n      gender: \"male\",\n      email: \"atuny0@sohu.com\",\n      phone: \"+63 791 675 8914\",\n      password: \"9uQFF1Lh\",\n      birthDate: \"2000-12-25\"\n    }];\n  }\n  isAuthenticated() {\n    return this.authStatus;\n  }\n  setAuthenticated(status) {\n    this.authStatus = status;\n  }\n  getUsers() {\n    return this.users;\n  }\n  getUserById(id) {\n    return this.http.get('https://dummyjson.com/users/' + id);\n  }\n  addUser(user) {\n    this.users?.push(user);\n    return this.http.post(\"https://dummyjson.com/users/add\", user);\n  }\n  findUser(email, password) {\n    return this.users.find(user => user.email === email && user.password === password);\n  }\n}\n_class = AuthService;\n_class.ɵfac = function AuthService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["AuthService","constructor","http","users","id","firstName","lastName","gender","email","phone","password","birthDate","isAuthenticated","authStatus","setAuthenticated","status","getUsers","getUserById","get","addUser","user","push","post","findUser","find","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["D:\\Studies\\Projects\\Angular\\ecommerce\\src\\app\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {User, UsersResponse} from \"./models/user\";\nimport {ProductsResponse} from \"./models/product-item\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {Observable} from \"rxjs\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  authStatus: boolean | undefined;\n\n  users: User[] = [{\n    id: 1,\n    firstName: \"Terry\",\n    lastName: \"Medhurst\",\n    gender: \"male\",\n    email: \"atuny0@sohu.com\",\n    phone: \"+63 791 675 8914\",\n    password: \"9uQFF1Lh\",\n    birthDate: \"2000-12-25\"\n  }];\n\n  constructor(private http:HttpClient) { }\n\n\n  public isAuthenticated(): boolean {\n    return <boolean>this.authStatus;\n  }\n\n  public setAuthenticated(status: boolean): void {\n    this.authStatus = status;\n  }\n  getUsers() {\n    return this.users;\n  }\n\n  getUserById(id: number) {\n    return this.http.get<ProductsResponse>('https://dummyjson.com/users/'+id);\n  }\n\n  addUser(user: User): Observable<User> {\n    this.users?.push(user);\n    return this.http.post<User>(\"https://dummyjson.com/users/add\", user);\n  }\n\n  findUser(email: string, password: string): User | undefined {\n    return this.users.find(user => user.email === email && user.password === password);\n  }\n}\n"],"mappings":";;;AASA,OAAM,MAAOA,WAAW;EAetBC,YAAoBC,IAAe;IAAf,KAAAA,IAAI,GAAJA,IAAI;IAXxB,KAAAC,KAAK,GAAW,CAAC;MACfC,EAAE,EAAE,CAAC;MACLC,SAAS,EAAE,OAAO;MAClBC,QAAQ,EAAE,UAAU;MACpBC,MAAM,EAAE,MAAM;MACdC,KAAK,EAAE,iBAAiB;MACxBC,KAAK,EAAE,kBAAkB;MACzBC,QAAQ,EAAE,UAAU;MACpBC,SAAS,EAAE;KACZ,CAAC;EAEqC;EAGhCC,eAAeA,CAAA;IACpB,OAAgB,IAAI,CAACC,UAAU;EACjC;EAEOC,gBAAgBA,CAACC,MAAe;IACrC,IAAI,CAACF,UAAU,GAAGE,MAAM;EAC1B;EACAC,QAAQA,CAAA;IACN,OAAO,IAAI,CAACb,KAAK;EACnB;EAEAc,WAAWA,CAACb,EAAU;IACpB,OAAO,IAAI,CAACF,IAAI,CAACgB,GAAG,CAAmB,8BAA8B,GAACd,EAAE,CAAC;EAC3E;EAEAe,OAAOA,CAACC,IAAU;IAChB,IAAI,CAACjB,KAAK,EAAEkB,IAAI,CAACD,IAAI,CAAC;IACtB,OAAO,IAAI,CAAClB,IAAI,CAACoB,IAAI,CAAO,iCAAiC,EAAEF,IAAI,CAAC;EACtE;EAEAG,QAAQA,CAACf,KAAa,EAAEE,QAAgB;IACtC,OAAO,IAAI,CAACP,KAAK,CAACqB,IAAI,CAACJ,IAAI,IAAIA,IAAI,CAACZ,KAAK,KAAKA,KAAK,IAAIY,IAAI,CAACV,QAAQ,KAAKA,QAAQ,CAAC;EACpF;;SAxCWV,WAAW;;mBAAXA,MAAW,EAAAyB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;SAAX5B,MAAW;EAAA6B,OAAA,EAAX7B,MAAW,CAAA8B,IAAA;EAAAC,UAAA,EAFV;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}